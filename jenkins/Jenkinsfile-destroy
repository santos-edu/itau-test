node{
    try {
        def PROJECT = "itau-test"
        def REPO_GIT = "git@github.com:santos-edu/itau-test.git"
        def BRANCH_NAME = "main"

        message = "PIPELINE STARTED IN BRANCH $BRANCH_NAME - Build $BUILD_NUMBER"

        stage("cloning_$PROJECT") {
                checkout([$class: 'GitSCM',
                    userRemoteConfigs: [[url: "$REPO_GIT"]],
                    branches: [[name: "$BRANCH_NAME"]],
                    credentialsId: 'TxMVYzKaAYMhskKNiqav',
                    clean: false,
                    extensions: [[$class: 'SubmoduleOption',
                                    disableSubmodules: false,
                                    parentCredentials: false,
                                    recursiveSubmodules: true,
                                    reference: '',
                                    trackingSubmodules: false]],
                    doGenerateSubmoduleConfigurations: false,
                    submoduleCfg: []
                ])
        }

        stage('terraform_destroy') {
            dir(env.WORKSPACE) {
                sh """
                    cd /var/lib/jenkins/workspace/itau-test/terraform
                    terraform destroy -auto-approve
                """
            }
        }

    } catch (error) {
        currentBuild.result = "FAILED"
        throw error
    } finally {
        currentBuild.result = "SUCCESS"
    }
}
